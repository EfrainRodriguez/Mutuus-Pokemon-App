{"version":3,"sources":["types/index.js","reducers/pokemonReducer.js","reducers/index.js","store.js","components/Navbar.js","utils/fetching.js","actions/pokemonAction.js","components/PokemonCard.js","components/Home.js","components/pokemon_profile/panels/AboutPanel.js","components/pokemon_profile/panels/EvolutionPanel.js","components/pokemon_profile/panels/StatsPanel.js","components/pokemon_profile/PokemonProfile.js","App.js","reportWebVitals.js","index.js"],"names":["GET_POKEMONS_FIRST","GET_POKEMONS_SUCCESS","GET_POKEMONS_ERROR","SET_SELECTED_POKEMON","initialState","pokemons","nextUrl","error","selectedPokemon","firstAccess","combineReducers","state","action","type","payload","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","Navbar","Nav","className","Container","Item","to","style","letterSpacing","fetchApi","url","a","Promise","res","rej","fetch","then","json","data","getPokemonAction","dispatch","firstFetch","pokemonGroup","all","results","map","pokemon","pokemonList","next","fetchPokemonsSucces","fetchPokemonsError","setSelectedPokemon","PokemonCard","useDispatch","currentPokemonHandler","p","setSelectedAction","Card","Header","name","id","Body","Col","Image","src","sprites","front_default","alt","width","Title","types","i","Text","length","Row","height","weight","onClick","Home","useSelector","useEffect","dataLength","hasMore","loader","role","PokemonPanel","species","xs","md","Form","Group","abilities","ability","egg_groups","egg","habitat","genera","gen","language","genus","replace","shape","color","EvolutionPanel","evChain","useState","previous","setPrevious","setNext","index","getPrevAndNext","item","StatsPanel","ProgressBar","now","stats","base_stat","label","PokemonProfile","selectedTab","setSelectedTab","setSpecies","pokemonChain","setPokemonChain","getPokemonsFromChain","chain","filter","evolves_to","specieData","evolution_chain","evChainData","getSpecies","Img","variant","activeKey","onSelect","selectedKey","selectedTabHandler","Link","eventKey","AboutPanel","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52bb668d.chunk.js","sourcesContent":["//types for load pokemon reducer\r\nexport const GET_POKEMONS_FIRST = 'GET_POKEMONS_FIRST'\r\nexport const GET_POKEMONS_SUCCESS = 'GET_POKEMONS_SUCCESS'\r\nexport const GET_POKEMONS_ERROR = 'GET_POKEMONS_ERROR'\r\n\r\n//types for selected pokemon\r\nexport const SET_SELECTED_POKEMON = 'SET_SELECTED_POKEMON'","//types\r\nimport {\r\n    GET_POKEMONS_FIRST,\r\n    GET_POKEMONS_SUCCESS,\r\n    GET_POKEMONS_ERROR,\r\n    SET_SELECTED_POKEMON\r\n} from '../types'\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    nextUrl: '',\r\n    error: null,\r\n    selectedPokemon: null,\r\n    firstAccess: true\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POKEMONS_FIRST:\r\n            return {\r\n                ...state,\r\n                firstAccess: action.payload,\r\n                selectedPokemon: null\r\n            }\r\n        case GET_POKEMONS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                error: false,\r\n                pokemons: [...state.pokemons, ...action.payload.pokemons],\r\n                nextUrl: action.payload.nextUrl,\r\n            }\r\n        case GET_POKEMONS_ERROR:\r\n            return{\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case SET_SELECTED_POKEMON:\r\n            return{\r\n                ...state,\r\n                selectedPokemon: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\n\r\nimport pokemonReducer from './pokemonReducer'\r\n\r\nexport default combineReducers({\r\n    pokemons: pokemonReducer\r\n})","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    compose(applyMiddleware(thunk),\r\n\r\n        typeof window === 'object' &&\r\n        typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \r\n            window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n)\r\n\r\nexport default store","import {Nav, Container} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\n//importing styles\r\nimport './custom.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Nav \r\n            className=\"navbar-dark bg-dark d-flex align-items-center\"\r\n        >\r\n            <Container className=\"py-3\">\r\n                <Nav.Item>\r\n                    <Link to={'/'}\r\n                        className=\"navbar-brand text-uppercase text-white mb-0 h4 pri-font-family\"\r\n                        style={{letterSpacing: '5px'}}\r\n                    >\r\n                        poke<span className=\"pri-font-color\">mutuus</span>\r\n                    </Link>\r\n                </Nav.Item>\r\n            </Container>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","const fetchApi = async (url) => {\r\n    return new Promise((res, rej) => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            res(data)\r\n        })\r\n    })\r\n}\r\n\r\nexport default fetchApi","//types\r\nimport {\r\n    GET_POKEMONS_FIRST,\r\n    GET_POKEMONS_SUCCESS,\r\n    GET_POKEMONS_ERROR,\r\n    SET_SELECTED_POKEMON\r\n} from '../types'\r\n\r\n//fetch funtion\r\nimport fetchApi from '../utils/fetching'\r\n\r\n/**\r\n * This action gets pokemon data from API\r\n * @param {string} url URL for fetching pokemon data from API\r\n */\r\nexport const getPokemonFirst = (url) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(firstFetch())\r\n\r\n        try {\r\n            let pokemonGroup = await fetchApi(url)\r\n            let pokemonList = await Promise.all(\r\n                pokemonGroup.results.map(async pokemon => {\r\n                    const pokemons = await fetchApi(pokemon.url)\r\n                    return pokemons\r\n                })\r\n            )\r\n            const data = {\r\n                pokemons: pokemonList,\r\n                nextUrl: pokemonGroup.next\r\n            }\r\n            dispatch(fetchPokemonsSucces(data))\r\n        } catch (error) {\r\n            dispatch(fetchPokemonsError())\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * This action gets pokemon data from API\r\n * @param {string} url URL for fetching pokemon data from API\r\n */\r\nexport const getPokemonAction = (url) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(firstFetch())\r\n\r\n        try {\r\n            let pokemonGroup = await fetchApi(url)\r\n            let pokemonList = await Promise.all(\r\n                pokemonGroup.results.map(async pokemon => {\r\n                    const pokemons = await fetchApi(pokemon.url)\r\n                    return pokemons\r\n                })\r\n            )\r\n            const data = {\r\n                pokemons: pokemonList,\r\n                nextUrl: pokemonGroup.next\r\n            }\r\n            dispatch(fetchPokemonsSucces(data))\r\n        } catch (error) {\r\n            dispatch(fetchPokemonsError())\r\n        }\r\n    }\r\n}\r\n\r\nconst firstFetch= () => ({\r\n    type: GET_POKEMONS_FIRST,\r\n    payload: false\r\n})\r\n\r\nconst fetchPokemonsSucces = (data) => ({\r\n    type: GET_POKEMONS_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nconst fetchPokemonsError = () => ({\r\n    type: GET_POKEMONS_ERROR,\r\n    payload: true\r\n})\r\n\r\n/**\r\n * Updates the state with selected pokemon\r\n * @param {object} pokemon selected pokemon\r\n */\r\nexport const setSelectedAction = (pokemon) => {\r\n    return (dispatch) => {\r\n        dispatch(setSelectedPokemon(pokemon))\r\n    }\r\n}\r\n\r\nconst setSelectedPokemon = (pokemon) => ({\r\n    type: SET_SELECTED_POKEMON,\r\n    payload: pokemon\r\n})","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//redux\r\nimport {useDispatch} from 'react-redux'\r\nimport {setSelectedAction} from '../actions/pokemonAction'\r\n\r\n//styles\r\nimport './custom.css'\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Image\r\n} from 'react-bootstrap'\r\n\r\nconst PokemonCard = ({pokemon}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const currentPokemonHandler = (p) => dispatch(setSelectedAction(p))\r\n\r\n    return (\r\n        <Card className=\"card text-white bg-dark m-3 custom-card pri-font-family\">\r\n            <Card.Header className=\"card-header d-flex align-items-center text-capitalize\">\r\n                <p className=\"h2 mr-auto mb-0\">{pokemon.name}</p>\r\n                <p className=\"mb-0\">{pokemon.id}</p>\r\n            </Card.Header>\r\n            <Card.Body className=\"row\">\r\n                <Col className=\"d-flex justify-content-center\">\r\n                    <Image className=\"mx-auto d-block\"\r\n                        src={pokemon.sprites.front_default}\r\n                        alt={'this is the pokemon ' + pokemon.name}\r\n                        style={{width: '200px'}}\r\n                    />\r\n                </Col>\r\n                <Col className=\"align-self-center\">\r\n                    <Card.Title className=\"text-center\">\r\n                            {\r\n                                pokemon.types.map((type, i) => (\r\n                                    i === 0 ? type.type.name : ' / ' + type.type.name\r\n                                ))\r\n                            }\r\n                    </Card.Title>\r\n                    <Card.Text className=\"text-center custom-label-font\">{pokemon.types.length > 1? 'Types' : 'Type'}</Card.Text>\r\n                    <hr/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card.Title className=\"text-center\">{(pokemon.height * 10) + ' cm'}</Card.Title>\r\n                            <Card.Text className=\"text-center custom-label-font\">Height</Card.Text>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card.Title className=\"text-center\">{(pokemon.weight / 10) + ' Kg'}</Card.Title>\r\n                            <Card.Text className=\"text-center custom-label-font\">Weigth</Card.Text>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr/>  \r\n                </Col>\r\n            </Card.Body>\r\n            <Link to={'/profile'}\r\n                className=\"btn btn-primary active mx-auto mb-3\"\r\n                onClick={() => currentPokemonHandler(pokemon)}\r\n            >\r\n                Details\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PokemonCard","import React, {useEffect} from 'react'\r\n\r\n//redux\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getPokemonAction} from '../actions/pokemonAction'\r\n\r\nimport {Container} from 'react-bootstrap'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n//importing components\r\nimport PokemonCard from './PokemonCard'\r\n\r\n//importing styles\r\nimport './custom.css'\r\n\r\nconst Home = () => {\r\n\r\n  const url = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\n  const dispatch = useDispatch();\r\n  const pokemons = useSelector((state) => state.pokemons)\r\n\r\n  useEffect(() => {\r\n\r\n    const getPokemons = () => dispatch(getPokemonAction(url));\r\n\r\n    if(pokemons.firstAccess) getPokemons();\r\n\r\n  }, []);\r\n\r\n  const reFetching = () => {\r\n    const getPokemons = () => dispatch(getPokemonAction(pokemons.nextUrl))\r\n    getPokemons();\r\n  };\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-wrap justify-content-center\">\r\n      <InfiniteScroll\r\n        dataLength={pokemons.pokemons.length}\r\n        next={reFetching}\r\n        hasMore={true}\r\n        loader={\r\n          <div className=\"text-primary overflow-hidden text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        }\r\n        className=\"d-flex flex-wrap justify-content-center\"\r\n      >\r\n        {pokemons.pokemons.map((pokemon, i) => (\r\n          <PokemonCard key={i} pokemon={pokemon} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\n//styles\r\nimport '../../custom.css'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nconst PokemonPanel = ({pokemon, species}) => {\r\n    \r\n  return (\r\n    <Row>\r\n      <Col xs={12} md={4}>\r\n        <Form.Group className=\"mb-4\">\r\n          <h3 className=\"text-center custom-text-font\">\r\n            {pokemon.abilities.map((ability, i) =>\r\n              i === 0 ? ability.ability.name : \" / \" + ability.ability.name\r\n            )}\r\n          </h3>\r\n          <h5 className=\"text-center custom-label-font\">Abilities</h5>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-4\">\r\n          <h4 className=\"text-center custom-text-font\">{pokemon.height * 10 + \" cm\"}</h4>\r\n          <h5 className=\"text-center custom-label-font\">Height</h5>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-4\">\r\n          <h3 className=\"text-center custom-text-font\">{pokemon.weight / 10 + \" Kg\"}</h3>\r\n          <h5 className=\"text-center custom-label-font\">Weigth</h5>\r\n        </Form.Group>          \r\n      </Col>\r\n\r\n      <Col xs={12} md={4}>\r\n        <Form.Group className=\"mb-4\">\r\n          <h3 className=\"text-center custom-text-font\">\r\n            {\r\n                pokemon.types.map((type, i) => (\r\n                    i === 0 ? type.type.name : ' / ' + type.type.name\r\n                ))\r\n            }\r\n          </h3>\r\n          <h5 className=\"text-center custom-label-font\">{pokemon.types.length > 1 ? 'Types' : 'Type'}</h5>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-4\">\r\n          <h4 className=\"text-center custom-text-font\">\r\n            {\r\n              species.egg_groups.map((egg, i) => (\r\n                i === 0 ? egg.name : ' / ' + egg.name\r\n              ))\r\n            }\r\n          </h4>\r\n          <h5 className=\"text-center custom-label-font\">{species.egg_groups.length > 1 ? 'Egg groups' : 'Egg group'}</h5>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-4\">\r\n          <h4 className=\"text-center custom-text-font\">\r\n            {\r\n              species.habitat.name\r\n            }\r\n          </h4>\r\n          <h5 className=\"text-center custom-label-font\">Habitat</h5>\r\n        </Form.Group>\r\n      </Col>\r\n\r\n      <Col xs={12} md={4}>\r\n        <Form.Group className=\"mb-4\">\r\n          <h4 className=\"text-center custom-text-font\">\r\n            {\r\n                species.genera.map(gen => (\r\n                  gen.language.name === 'en' ? gen.genus.replace(' Pokémon','') : null\r\n                ))\r\n            }\r\n          </h4>\r\n          <h5 className=\"text-center custom-label-font\">Genus</h5>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-4\">\r\n          <h4 className=\"text-center custom-text-font\">\r\n            {\r\n              species.shape.name\r\n            }\r\n          </h4>\r\n          <h5 className=\"text-center custom-label-font\">Shape</h5>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-4\">\r\n          <h4 className=\"text-center custom-text-font\">\r\n            {\r\n              species.color.name\r\n            }\r\n          </h4>\r\n          <h5 className=\"text-center custom-label-font\">Color</h5>\r\n        </Form.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PokemonPanel;","import React, {Fragment, useState, useEffect} from 'react'\r\n\r\n//importing styles\r\nimport '../../custom.css'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Image\r\n} from 'react-bootstrap'\r\n\r\nconst EvolutionPanel = ({pokemon, evChain}) => {\r\n\r\n    const [previous, setPrevious] = useState(null)\r\n    const [next, setNext] = useState(null)\r\n\r\n    useEffect(() => {\r\n\r\n        const getPrevAndNext = () => {\r\n            let index = 0\r\n            while(index < evChain.length){\r\n                if(evChain[index].name === pokemon.name){\r\n                    setPrevious(evChain[index - 1])\r\n                    setNext(evChain[index + 1])\r\n                    return\r\n                }\r\n                index++\r\n            }\r\n        }\r\n\r\n        getPrevAndNext()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col xs={12} md={6} className=\"mb-5\">\r\n                    <h4 className=\"text-center\">Evolves from</h4>\r\n                    {\r\n                        previous ?\r\n                        <Container>\r\n                            \r\n                            <Image className=\"mx-auto d-block\"\r\n                                src={previous.sprites.front_default}\r\n                                alt={'this is the pokemon ' + previous.name}\r\n                                style={{width: '150px'}}\r\n                            /> \r\n                            <h5 className=\"text-center custom-label-font\">{previous.name}</h5>\r\n                        </Container> :\r\n                        <Container>\r\n                            <h5 className=\"text-center custom-label-font\">Has no previous</h5>\r\n                        </Container>\r\n                    }\r\n                </Col>\r\n                <Col xs={12} md={6} className=\"mb-3\">\r\n                    <h4 className=\"text-center\">Evolves to</h4>\r\n                    {\r\n                        next ?\r\n                        <Container>\r\n                            <Image className=\"mx-auto d-block\"\r\n                                src={next.sprites.front_default}\r\n                                alt={'this is the pokemon ' + next.name}\r\n                                style={{width: '150px'}}\r\n                            /> \r\n                            <h5 className=\"text-center custom-label-font\">{next.name}</h5>\r\n                        </Container> :\r\n                        <Container>\r\n                            <h5 className=\"text-center custom-label-font\">Has no next</h5>\r\n                        </Container>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n                <Col xs={12} md={6} className=\"my-5\">\r\n                    <h4 className=\"text-center\">Whole evolution</h4>\r\n                    {\r\n                        evChain.map((item, i) => (\r\n                            <Container key={i}>\r\n                                <Image className=\"mx-auto d-block\"\r\n                                    src={item.sprites.front_default}\r\n                                    alt={'this is the pokemon ' + item.name}\r\n                                    style={{width: '150px'}}\r\n                                /> \r\n                                <h5 className=\"text-center custom-label-font\">{item.name}</h5>\r\n                            </Container>\r\n                        ))\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EvolutionPanel\r\n","import React, {Fragment} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n//styles\r\nimport '../../custom.css'\r\nimport {\r\n  Row,\r\n  Col,\r\n  ProgressBar,\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nconst StatsPanel = ({pokemon}) => {\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col xs={12} md={6} className=\"px-5\">\r\n                    <Form.Group className=\"mb-4\">\r\n                        <ProgressBar now={pokemon.stats[0].base_stat} label={`${pokemon.stats[0].base_stat}%`} />\r\n                        <h5 className=\"text-center custom-label-font pt-2\">HP</h5>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <ProgressBar now={pokemon.stats[1].base_stat} label={`${pokemon.stats[1].base_stat}%`} />\r\n                        <h5 className=\"text-center custom-label-font pt-2\">Attack</h5>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <ProgressBar now={pokemon.stats[2].base_stat} label={`${pokemon.stats[2].base_stat}%`} />\r\n                        <h5 className=\"text-center custom-label-font pt-2\">Defense</h5>\r\n                    </Form.Group>          \r\n                </Col>\r\n\r\n                <Col xs={12} md={6} className=\"px-5\">\r\n                    <Form.Group className=\"mb-4\">\r\n                        <ProgressBar now={pokemon.stats[3].base_stat} label={`${pokemon.stats[3].base_stat}%`}/>\r\n                        <h5 className=\"text-center custom-label-font pt-2\">Special Attack</h5>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <ProgressBar now={pokemon.stats[4].base_stat} label={`${pokemon.stats[4].base_stat}%`} />\r\n                        <h5 className=\"text-center custom-label-font pt-2\">Special Defense</h5>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <ProgressBar now={pokemon.stats[5].base_stat} label={`${pokemon.stats[5].base_stat}%`} />\r\n                        <h5 className=\"text-center custom-label-font pt-2\">Speed</h5>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n                \r\n    )\r\n}\r\n\r\nexport default StatsPanel\r\n","import React, {useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport fetchApi from '../../utils/fetching'\r\n\r\n//importing styles\r\nimport '../custom.css'\r\nimport {\r\n    Card,\r\n    Nav,\r\n    Container\r\n} from 'react-bootstrap'\r\n\r\n//importing components\r\nimport AboutPanel from './panels/AboutPanel';\r\nimport EvolutionPanel from './panels/EvolutionPanel';\r\nimport StatsPanel from './panels/StatsPanel'\r\n\r\nconst PokemonProfile = () => {\r\n\r\n    //local states\r\n    const [selectedTab, setSelectedTab] = useState('about')\r\n    const [species, setSpecies] = useState(null)\r\n    const [pokemonChain, setPokemonChain] = useState([])\r\n\r\n    const pokemon = useSelector(state => state.pokemons.selectedPokemon)\r\n    const pokemons = useSelector((state) => state.pokemons);\r\n\r\n    useEffect(() => {\r\n\r\n        const getPokemonsFromChain = (chain) => {\r\n\r\n            let p = pokemons.pokemons.filter(item => item.name === chain.species.name)\r\n\r\n            setPokemonChain(pokemonChain => [...pokemonChain, ...p])\r\n\r\n            if(!chain.evolves_to.length) return\r\n\r\n            chain.evolves_to.map(item => {\r\n                getPokemonsFromChain(item)\r\n            })\r\n        }\r\n        \r\n        //fetching species and evolution chain\r\n        const getSpecies = async() => {\r\n            const specieData = await fetchApi(pokemon.species.url)\r\n            const evChainData = await fetchApi(specieData.evolution_chain.url)\r\n\r\n            getPokemonsFromChain(evChainData.chain)\r\n\r\n            setSpecies(specieData)\r\n        }\r\n        getSpecies()\r\n    \r\n    }, [])\r\n\r\n    const selectedTabHandler = (selectedKey) => {\r\n        setSelectedTab(selectedKey)\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-wrap justify-content-center\">\r\n            <Card className=\"card text-white bg-dark m-3 custom-profile-card pri-font-family\">\r\n                <Card.Header className=\"card-header d-flex justify-content-center pb-0 text-capitalize\">\r\n                    <p className=\"h2\">{pokemon.name}</p>\r\n                </Card.Header>\r\n                <Container className=\"d-flex justify-content-center\">\r\n                    <Card.Img\r\n                        src={pokemon.sprites.front_default}\r\n                        alt={'this is the pokemon ' + pokemon.name}\r\n                        style={{width: '300px'}}\r\n                    />\r\n                </Container>\r\n                <Card.Body className=\"d-flex justify-content-center\">\r\n                    <Nav\r\n                        variant=\"pills\"\r\n                        activeKey={\r\n                            (selectedTab === 'about' ? 'about' : null) ||\r\n                            (selectedTab === 'evolutions' ? 'evolutions' : null) ||\r\n                            (selectedTab === 'stats' ? 'stats' : null)\r\n                        }\r\n                        onSelect={(selectedKey) => selectedTabHandler(selectedKey)}\r\n                    >\r\n                        <Nav.Item className=\"custom-tab-item\" >\r\n                            <Nav.Link className=\"custom-tab-font\"\r\n                                eventKey=\"about\">About\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"custom-tab-item\" >\r\n                            <Nav.Link className=\"custom-tab-font\" \r\n                                eventKey=\"evolutions\">Evolutions\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"custom-tab-item\" >\r\n                            <Nav.Link className=\"custom-tab-font\" \r\n                                eventKey=\"stats\">Stats\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Card.Body>\r\n                <hr className=\"m-0\"/>\r\n                <Container className=\"py-4\">\r\n                    {\r\n                        (selectedTab === 'about' && species !== null ? <AboutPanel pokemon = {pokemon} species = {species}/> : null) ||\r\n                        (selectedTab === 'evolutions' && pokemonChain !== null ? <EvolutionPanel pokemon = {pokemon} evChain = {pokemonChain} /> : null) ||\r\n                        (selectedTab === 'stats' ? <StatsPanel pokemon = {pokemon}/> : null)\r\n                    }\r\n                </Container>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PokemonProfile","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\n//redux\nimport {Provider} from 'react-redux'\nimport store from './store';\n\n//styles\nimport './components/custom.css'\n\nimport {Redirect} from 'react-router-dom'\n\n//components\nimport Navbar from './components/Navbar'\nimport Home from './components/Home';\nimport PokemonProfile from './components/pokemon_profile/PokemonProfile';\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/home\" component={Home}/>\n          <Route exact path=\"/profile\" component={PokemonProfile}/>\n          <Redirect to={'/home'}/>\n        </Switch>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}